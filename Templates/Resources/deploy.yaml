---
AWSTemplateFormatVersion: '2010-09-09'
Description: Sample CloudFormation template with Lambda and pPrefix parameter

Parameters:
  pPrefix:
    Type: String
    Description: Prefix for Lambda function naming
  ApiName:
    Type: String
    Default: WorkbenchAPI
    Description: Name of the API Gateway API

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  SampleLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${pPrefix}-sample-lambda"
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.13
      Code:
        ZipFile: |
          def handler(event, context):
              return {"statusCode": 200, "body": "Hello from Lambda!"}

  WorkspaceLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${pPrefix}-workspaces-lambda"
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.13
      Code:
        ZipFile: |
          def handler(event, context):
              return {"statusCode": 200, "body": "Hello from Lambda!"}

  WorkbenchApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiName
      BodyS3Location:
        Bucket: my-sample-bucket-salma
        Key: swagger.yaml
      FailOnWarnings: true

  WorkbenchApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: WorkbenchApi
    Properties:
      RestApiId: !Ref WorkbenchApi
      StageName: test

  WorkbenchApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref WorkbenchApi
      DeploymentId: !Ref WorkbenchApiDeployment
      StageName: prod
      Description: test stage
      # Logging removed to prevent CloudWatch role requirement

Outputs:
  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref SampleLambdaFunction

  ApiUrl:
    Description: "Invoke URL for the deployed API"
    Value: !Sub "https://${WorkbenchApi}.execute-api.${AWS::Region}.amazonaws.com/prod"